(lhz-torch-2.0) lhz@csgpu-SYS-4029GP-TRT:~/code/LAMDA-PILOT$ CUDA_LAUNCH_BLOCKING=1 python main.py --config=./exps/l2p_pseudolabeling.json
2023-12-17 16:49:17,816 [trainer.py] => config: ./exps/l2p_pseudolabeling.json
2023-12-17 16:49:17,816 [trainer.py] => prefix:  
2023-12-17 16:49:17,816 [trainer.py] => dataset: cifar224
2023-12-17 16:49:17,816 [trainer.py] => memory_size: 0
2023-12-17 16:49:17,816 [trainer.py] => memory_per_class: 0
2023-12-17 16:49:17,816 [trainer.py] => fixed_memory: False
2023-12-17 16:49:17,816 [trainer.py] => shuffle: True
2023-12-17 16:49:17,816 [trainer.py] => init_cls: 10
2023-12-17 16:49:17,816 [trainer.py] => increment: 10
2023-12-17 16:49:17,816 [trainer.py] => model_name: l2p_pseudolabeling
2023-12-17 16:49:17,816 [trainer.py] => backbone_type: vit_base_patch16_224_l2p
2023-12-17 16:49:17,816 [trainer.py] => get_original_backbone: True
2023-12-17 16:49:17,817 [trainer.py] => device: [device(type='cuda', index=0)]
2023-12-17 16:49:17,817 [trainer.py] => seed: 1993
2023-12-17 16:49:17,817 [trainer.py] => tuned_epoch: 5
2023-12-17 16:49:17,817 [trainer.py] => init_lr: 0.001875
2023-12-17 16:49:17,817 [trainer.py] => batch_size: 16
2023-12-17 16:49:17,817 [trainer.py] => weight_decay: 0
2023-12-17 16:49:17,817 [trainer.py] => min_lr: 1e-05
2023-12-17 16:49:17,817 [trainer.py] => optimizer: adam
2023-12-17 16:49:17,817 [trainer.py] => scheduler: constant
2023-12-17 16:49:17,817 [trainer.py] => reinit_optimizer: True
2023-12-17 16:49:17,817 [trainer.py] => global_pool: token
2023-12-17 16:49:17,817 [trainer.py] => head_type: prompt
2023-12-17 16:49:17,817 [trainer.py] => freeze: ['blocks', 'patch_embed', 'cls_token', 'norm', 'pos_embed']
2023-12-17 16:49:17,817 [trainer.py] => pretrained: True
2023-12-17 16:49:17,817 [trainer.py] => drop: 0.0
2023-12-17 16:49:17,817 [trainer.py] => drop_path: 0.0
2023-12-17 16:49:17,817 [trainer.py] => prompt_pool: True
2023-12-17 16:49:17,817 [trainer.py] => pool_size: 10
2023-12-17 16:49:17,817 [trainer.py] => length: 5
2023-12-17 16:49:17,817 [trainer.py] => top_k: 5
2023-12-17 16:49:17,817 [trainer.py] => initializer: uniform
2023-12-17 16:49:17,817 [trainer.py] => prompt_key: True
2023-12-17 16:49:17,817 [trainer.py] => prompt_key_init: uniform
2023-12-17 16:49:17,817 [trainer.py] => use_prompt_mask: False
2023-12-17 16:49:17,817 [trainer.py] => shared_prompt_pool: False
2023-12-17 16:49:17,818 [trainer.py] => shared_prompt_key: False
2023-12-17 16:49:17,818 [trainer.py] => batchwise_prompt: True
2023-12-17 16:49:17,818 [trainer.py] => embedding_key: cls
2023-12-17 16:49:17,818 [trainer.py] => predefined_key: 
2023-12-17 16:49:17,818 [trainer.py] => pull_constraint: True
2023-12-17 16:49:17,818 [trainer.py] => pull_constraint_coeff: 0.1
2023-12-17 16:49:17,818 [trainer.py] => semi_supervised_mode: True
2023-12-17 16:49:17,818 [trainer.py] => labeled_ratio: 0.25
2023-12-17 16:49:17,818 [trainer.py] => unlabeled_data_distribution_mode: no_ood
2023-12-17 16:49:17,818 [trainer.py] => confidence_threshold: 0.9
Files already downloaded and verified
Files already downloaded and verified
2023-12-17 16:49:20,034 [data_manager.py] => [68, 56, 78, 8, 23, 84, 90, 65, 74, 76, 40, 89, 3, 92, 55, 9, 26, 80, 43, 38, 58, 70, 77, 1, 85, 19, 17, 50, 28, 53, 13, 81, 45, 82, 6, 59, 83, 16, 15, 44, 91, 41, 72, 60, 79, 52, 20, 10, 31, 54, 37, 95, 14, 71, 96, 98, 97, 2, 64, 66, 42, 22, 35, 86, 24, 34, 87, 21, 99, 0, 88, 27, 18, 94, 11, 12, 47, 25, 30, 46, 62, 69, 36, 61, 7, 63, 75, 5, 32, 4, 51, 48, 73, 93, 39, 67, 29, 49, 57, 33]
2023-12-17 16:49:24,314 [vision_transformer_l2p.py] => Resized position embedding: torch.Size([1, 197, 768]) to torch.Size([1, 222, 768])
2023-12-17 16:49:24,314 [vision_transformer_l2p.py] => Position embedding grid-size from [14, 14] to (14, 14)
2023-12-17 16:49:26,898 [l2p_pseudolabeling.py] => 85,940,836 model total parameters.
2023-12-17 16:49:26,899 [l2p_pseudolabeling.py] => 122,980 model training parameters.
2023-12-17 16:49:26,899 [l2p_pseudolabeling.py] => prompt.prompt: 38400
2023-12-17 16:49:26,899 [l2p_pseudolabeling.py] => prompt.prompt_key: 7680
2023-12-17 16:49:26,899 [l2p_pseudolabeling.py] => head.weight: 76800
2023-12-17 16:49:26,900 [l2p_pseudolabeling.py] => head.bias: 100
2023-12-17 16:49:26,901 [trainer.py] => All params: 171816392
2023-12-17 16:49:26,901 [trainer.py] => Trainable params: 122980
2023-12-17 16:49:26,902 [l2p_pseudolabeling.py] => Learning on 0-10
2023-12-17 16:49:26,949 [l2p_pseudolabeling.py] => start pseudo labeling...
2023-12-17 16:54:33,079 [l2p_pseudolabeling.py] => It will add 2760 pseudo labelled samples
2023-12-17 16:54:33,080 [l2p_pseudolabeling.py] => pseudo labeling finished
Task 0, Epoch 4/5 => Loss 0.077, Train_accy 88.83:  80%|████████████████████████████████████████████████████████████████████████████████████████████                       | 4/5 [18:42<04:21, 261.60s/it]Class 0: Accuracy = 1.0000
Class 1: Accuracy = 0.9800
Class 2: Accuracy = 1.0000
Class 3: Accuracy = 0.9900
Class 4: Accuracy = 0.9200
Class 5: Accuracy = 0.9100
Class 6: Accuracy = 0.9100
Class 7: Accuracy = 1.0000
Class 8: Accuracy = 0.8800
Class 9: Accuracy = 0.8900
Task 0, Epoch 5/5 => Loss 0.034, Train_accy 88.50, Test_accy 94.80: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5/5 [23:15<00:00, 279.15s/it]
2023-12-17 17:17:49,497 [l2p_pseudolabeling.py] => Task 0, Epoch 5/5 => Loss 0.034, Train_accy 88.50, Test_accy 94.80
2023-12-17 17:17:57,276 [trainer.py] => No NME accuracy.
2023-12-17 17:17:57,276 [trainer.py] => CNN: {'total': 94.8, '00-09': 94.8, 'old': 0, 'new': 94.8}
2023-12-17 17:17:57,276 [trainer.py] => CNN top1 curve: [94.8]
2023-12-17 17:17:57,276 [trainer.py] => CNN top5 curve: [99.4]

Average Accuracy (CNN): 94.8
2023-12-17 17:17:57,276 [trainer.py] => Average Accuracy (CNN): 94.8 

2023-12-17 17:17:57,278 [trainer.py] => All params: 171816392
2023-12-17 17:17:57,280 [trainer.py] => Trainable params: 122980
2023-12-17 17:17:57,280 [l2p_pseudolabeling.py] => Learning on 10-20
2023-12-17 17:17:57,397 [l2p_pseudolabeling.py] => start pseudo labeling...
2023-12-17 17:18:36,857 [l2p_pseudolabeling.py] => It will add 2579 pseudo labelled samples
2023-12-17 17:18:36,857 [l2p_pseudolabeling.py] => pseudo labeling finished
Task 1, Epoch 4/5 => Loss 0.041, Train_accy 89.06:  80%|████████████████████████████████████████████████████████████████████████████████████████████▊                       | 4/5 [02:53<00:43, 43.56s/it]Class 0: Accuracy = 0.9700
Class 1: Accuracy = 0.9800
Class 2: Accuracy = 1.0000
Class 3: Accuracy = 0.9900
Class 4: Accuracy = 0.8000
Class 5: Accuracy = 0.9100
Class 6: Accuracy = 0.9200
Class 7: Accuracy = 0.9500
Class 8: Accuracy = 0.8900
Class 9: Accuracy = 0.9100
Class 10: Accuracy = 0.8400
Class 11: Accuracy = 0.9900
Class 12: Accuracy = 0.9700
Class 13: Accuracy = 0.9800
Class 14: Accuracy = 0.8300
Class 15: Accuracy = 0.9400
Class 16: Accuracy = 0.9300
Class 17: Accuracy = 0.8600
Class 18: Accuracy = 0.9400
Class 19: Accuracy = 0.7400
Task 1, Epoch 5/5 => Loss 0.032, Train_accy 88.87, Test_accy 91.70: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████| 5/5 [03:52<00:00, 46.49s/it]
2023-12-17 17:22:29,344 [l2p_pseudolabeling.py] => Task 1, Epoch 5/5 => Loss 0.032, Train_accy 88.87, Test_accy 91.70
2023-12-17 17:22:44,068 [trainer.py] => No NME accuracy.
2023-12-17 17:22:44,068 [trainer.py] => CNN: {'total': 91.7, '00-09': 93.2, '10-19': 90.2, 'old': 93.2, 'new': 90.2}
2023-12-17 17:22:44,069 [trainer.py] => CNN top1 curve: [94.8, 91.7]
2023-12-17 17:22:44,069 [trainer.py] => CNN top5 curve: [99.4, 98.6]

Average Accuracy (CNN): 93.25
2023-12-17 17:22:44,069 [trainer.py] => Average Accuracy (CNN): 93.25 

2023-12-17 17:22:44,070 [trainer.py] => All params: 171816392
2023-12-17 17:22:44,072 [trainer.py] => Trainable params: 122980
2023-12-17 17:22:44,072 [l2p_pseudolabeling.py] => Learning on 20-30
2023-12-17 17:22:44,128 [l2p_pseudolabeling.py] => start pseudo labeling...
2023-12-17 17:23:24,023 [l2p_pseudolabeling.py] => It will add 2999 pseudo labelled samples
2023-12-17 17:23:24,023 [l2p_pseudolabeling.py] => pseudo labeling finished
Task 2, Epoch 4/5 => Loss -0.081, Train_accy 93.08:  80%|████████████████████████████████████████████████████████████████████████████████████████████                       | 4/5 [03:14<00:48, 48.81s/it]Class 0: Accuracy = 0.9700
Class 1: Accuracy = 0.9800
Class 2: Accuracy = 0.9900
Class 3: Accuracy = 0.9900
Class 4: Accuracy = 0.7900
Class 5: Accuracy = 0.8700
Class 6: Accuracy = 0.8700
Class 7: Accuracy = 0.9200
Class 8: Accuracy = 0.7800
Class 9: Accuracy = 0.7100
Class 10: Accuracy = 0.6800
Class 11: Accuracy = 0.9800
Class 12: Accuracy = 0.9500
Class 13: Accuracy = 0.8500
Class 14: Accuracy = 0.8100
Class 15: Accuracy = 0.8900
Class 16: Accuracy = 0.8800
Class 17: Accuracy = 0.8500
Class 18: Accuracy = 0.9300
Class 19: Accuracy = 0.7600
Class 20: Accuracy = 0.7800
Class 21: Accuracy = 0.7900
Class 22: Accuracy = 0.9100
Class 23: Accuracy = 0.9800
Class 24: Accuracy = 0.8500
Class 25: Accuracy = 0.9600
Class 26: Accuracy = 0.9700
Class 27: Accuracy = 0.4800
Class 28: Accuracy = 0.9900
Class 29: Accuracy = 0.9900
Task 2, Epoch 5/5 => Loss -0.091, Train_accy 92.80, Test_accy 87.17: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5/5 [04:26<00:00, 53.21s/it]
2023-12-17 17:27:50,115 [l2p_pseudolabeling.py] => Task 2, Epoch 5/5 => Loss -0.091, Train_accy 92.80, Test_accy 87.17
2023-12-17 17:28:11,787 [trainer.py] => No NME accuracy.
2023-12-17 17:28:11,788 [trainer.py] => CNN: {'total': 87.17, '00-09': 88.7, '10-19': 85.8, '20-29': 87.0, 'old': 87.25, 'new': 87.0}
2023-12-17 17:28:11,788 [trainer.py] => CNN top1 curve: [94.8, 91.7, 87.17]
2023-12-17 17:28:11,788 [trainer.py] => CNN top5 curve: [99.4, 98.6, 98.5]

Average Accuracy (CNN): 91.22333333333334
2023-12-17 17:28:11,788 [trainer.py] => Average Accuracy (CNN): 91.22333333333334 

2023-12-17 17:28:11,790 [trainer.py] => All params: 171816392
2023-12-17 17:28:11,791 [trainer.py] => Trainable params: 122980
2023-12-17 17:28:11,792 [l2p_pseudolabeling.py] => Learning on 30-40
2023-12-17 17:28:11,899 [l2p_pseudolabeling.py] => start pseudo labeling...
2023-12-17 17:28:51,653 [l2p_pseudolabeling.py] => It will add 2735 pseudo labelled samples
2023-12-17 17:28:51,653 [l2p_pseudolabeling.py] => pseudo labeling finished
Task 3, Epoch 4/5 => Loss -0.057, Train_accy 91.57:  80%|████████████████████████████████████████████████████████████████████████████████████████████                       | 4/5 [03:03<00:45, 45.89s/it]Class 0: Accuracy = 0.9100
Class 1: Accuracy = 0.8700
Class 2: Accuracy = 0.9300
Class 3: Accuracy = 0.9900
Class 4: Accuracy = 0.7000
Class 5: Accuracy = 0.8700
Class 6: Accuracy = 0.8000
Class 7: Accuracy = 0.9200
Class 8: Accuracy = 0.7800
Class 9: Accuracy = 0.6600
Class 10: Accuracy = 0.6600
Class 11: Accuracy = 0.9800
Class 12: Accuracy = 0.9500
Class 13: Accuracy = 0.8800
Class 14: Accuracy = 0.7600
Class 15: Accuracy = 0.8200
Class 16: Accuracy = 0.8000
Class 17: Accuracy = 0.7800
Class 18: Accuracy = 0.9300
Class 19: Accuracy = 0.7600
Class 20: Accuracy = 0.4100
Class 21: Accuracy = 0.7500
Class 22: Accuracy = 0.8900
Class 23: Accuracy = 0.9700
Class 24: Accuracy = 0.8300
Class 25: Accuracy = 0.9500
Class 26: Accuracy = 0.9800
Class 27: Accuracy = 0.4300
Class 28: Accuracy = 0.9600
Class 29: Accuracy = 0.9900
Class 30: Accuracy = 0.9300
Class 31: Accuracy = 0.4600
Class 32: Accuracy = 0.7500
Class 33: Accuracy = 0.9800
Class 34: Accuracy = 0.9700
Class 35: Accuracy = 0.9800
Class 36: Accuracy = 0.9700
Class 37: Accuracy = 0.9200
Class 38: Accuracy = 0.9600
Class 39: Accuracy = 0.9700
Task 3, Epoch 5/5 => Loss -0.077, Train_accy 91.74, Test_accy 84.50: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5/5 [04:17<00:00, 51.59s/it]
2023-12-17 17:33:09,645 [l2p_pseudolabeling.py] => Task 3, Epoch 5/5 => Loss -0.077, Train_accy 91.74, Test_accy 84.50
2023-12-17 17:33:38,213 [trainer.py] => No NME accuracy.
2023-12-17 17:33:38,213 [trainer.py] => CNN: {'total': 84.5, '00-09': 84.3, '10-19': 83.2, '20-29': 81.6, '30-39': 88.9, 'old': 83.03, 'new': 88.9}
2023-12-17 17:33:38,213 [trainer.py] => CNN top1 curve: [94.8, 91.7, 87.17, 84.5]
2023-12-17 17:33:38,213 [trainer.py] => CNN top5 curve: [99.4, 98.6, 98.5, 98.15]

Average Accuracy (CNN): 89.5425
2023-12-17 17:33:38,213 [trainer.py] => Average Accuracy (CNN): 89.5425 

2023-12-17 17:33:38,215 [trainer.py] => All params: 171816392
2023-12-17 17:33:38,216 [trainer.py] => Trainable params: 122980
2023-12-17 17:33:38,216 [l2p_pseudolabeling.py] => Learning on 40-50
2023-12-17 17:33:38,274 [l2p_pseudolabeling.py] => start pseudo labeling...
2023-12-17 17:34:17,626 [l2p_pseudolabeling.py] => It will add 3030 pseudo labelled samples
2023-12-17 17:34:17,626 [l2p_pseudolabeling.py] => pseudo labeling finished
Task 4, Epoch 4/5 => Loss -0.095, Train_accy 93.22:  80%|████████████████████████████████████████████████████████████████████████████████████████████                       | 4/5 [03:15<00:48, 48.92s/it]Class 0: Accuracy = 0.6700
Class 1: Accuracy = 0.8300
Class 2: Accuracy = 0.9300
Class 3: Accuracy = 1.0000
Class 4: Accuracy = 0.3000
Class 5: Accuracy = 0.7500
Class 6: Accuracy = 0.8000
Class 7: Accuracy = 0.8900
Class 8: Accuracy = 0.7500
Class 9: Accuracy = 0.7000
Class 10: Accuracy = 0.6800
Class 11: Accuracy = 0.9800
Class 12: Accuracy = 0.8700
Class 13: Accuracy = 0.9100
Class 14: Accuracy = 0.3900
Class 15: Accuracy = 0.8600
Class 16: Accuracy = 0.6500
Class 17: Accuracy = 0.7700
Class 18: Accuracy = 0.9300
Class 19: Accuracy = 0.7500
Class 20: Accuracy = 0.4900
Class 21: Accuracy = 0.6700
Class 22: Accuracy = 0.8800
Class 23: Accuracy = 0.9700
Class 24: Accuracy = 0.8100
Class 25: Accuracy = 0.9500
Class 26: Accuracy = 0.9600
Class 27: Accuracy = 0.4400
Class 28: Accuracy = 0.9100
Class 29: Accuracy = 0.9900
Class 30: Accuracy = 0.9200
Class 31: Accuracy = 0.4600
Class 32: Accuracy = 0.6900
Class 33: Accuracy = 0.9800
Class 34: Accuracy = 0.9300
Class 35: Accuracy = 0.7600
Class 36: Accuracy = 0.9700
Class 37: Accuracy = 0.9000
Class 38: Accuracy = 0.9600
Class 39: Accuracy = 0.9500
Class 40: Accuracy = 0.8400
Class 41: Accuracy = 0.7900
Class 42: Accuracy = 0.9100
Class 43: Accuracy = 0.9600
Class 44: Accuracy = 0.9800
Class 45: Accuracy = 0.9600
Class 46: Accuracy = 0.9900
Class 47: Accuracy = 0.7300
Class 48: Accuracy = 0.8000
Class 49: Accuracy = 0.9000
Task 4, Epoch 5/5 => Loss -0.112, Train_accy 93.71, Test_accy 81.72: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5/5 [04:40<00:00, 56.08s/it]
2023-12-17 17:38:58,050 [l2p_pseudolabeling.py] => Task 4, Epoch 5/5 => Loss -0.112, Train_accy 93.71, Test_accy 81.72
2023-12-17 17:39:33,256 [trainer.py] => No NME accuracy.
2023-12-17 17:39:33,256 [trainer.py] => CNN: {'total': 81.72, '00-09': 76.2, '10-19': 77.9, '20-29': 80.7, '30-39': 85.2, '40-49': 88.6, 'old': 80.0, 'new': 88.6}
2023-12-17 17:39:33,256 [trainer.py] => CNN top1 curve: [94.8, 91.7, 87.17, 84.5, 81.72]
2023-12-17 17:39:33,257 [trainer.py] => CNN top5 curve: [99.4, 98.6, 98.5, 98.15, 97.56]

Average Accuracy (CNN): 87.978
2023-12-17 17:39:33,257 [trainer.py] => Average Accuracy (CNN): 87.978 

2023-12-17 17:39:33,259 [trainer.py] => All params: 171816392
2023-12-17 17:39:33,260 [trainer.py] => Trainable params: 122980
2023-12-17 17:39:33,260 [l2p_pseudolabeling.py] => Learning on 50-60
2023-12-17 17:39:33,328 [l2p_pseudolabeling.py] => start pseudo labeling...
2023-12-17 17:40:13,268 [l2p_pseudolabeling.py] => It will add 2763 pseudo labelled samples
2023-12-17 17:40:13,269 [l2p_pseudolabeling.py] => pseudo labeling finished
Task 5, Epoch 4/5 => Loss -0.033, Train_accy 90.51:  80%|████████████████████████████████████████████████████████████████████████████████████████████                       | 4/5 [03:04<00:45, 45.99s/it]Class 0: Accuracy = 0.6500
Class 1: Accuracy = 0.8100
Class 2: Accuracy = 0.9400
Class 3: Accuracy = 0.9900
Class 4: Accuracy = 0.2500
Class 5: Accuracy = 0.7400
Class 6: Accuracy = 0.7800
Class 7: Accuracy = 0.8900
Class 8: Accuracy = 0.7300
Class 9: Accuracy = 0.6900
Class 10: Accuracy = 0.6700
Class 11: Accuracy = 0.9800
Class 12: Accuracy = 0.9000
Class 13: Accuracy = 0.9200
Class 14: Accuracy = 0.3700
Class 15: Accuracy = 0.8700
Class 16: Accuracy = 0.6400
Class 17: Accuracy = 0.7500
Class 18: Accuracy = 0.9300
Class 19: Accuracy = 0.7800
Class 20: Accuracy = 0.5400
Class 21: Accuracy = 0.6700
Class 22: Accuracy = 0.8700
Class 23: Accuracy = 0.9700
Class 24: Accuracy = 0.8100
Class 25: Accuracy = 0.9300
Class 26: Accuracy = 0.8900
Class 27: Accuracy = 0.4900
Class 28: Accuracy = 0.9000
Class 29: Accuracy = 0.9900
Class 30: Accuracy = 0.8800
Class 31: Accuracy = 0.3600
Class 32: Accuracy = 0.7200
Class 33: Accuracy = 0.9700
Class 34: Accuracy = 0.9300
Class 35: Accuracy = 0.7200
Class 36: Accuracy = 0.9700
Class 37: Accuracy = 0.9000
Class 38: Accuracy = 0.9600
Class 39: Accuracy = 0.9500
Class 40: Accuracy = 0.8900
Class 41: Accuracy = 0.7600
Class 42: Accuracy = 0.8800
Class 43: Accuracy = 0.9500
Class 44: Accuracy = 0.9800
Class 45: Accuracy = 0.9600
Class 46: Accuracy = 0.9900
Class 47: Accuracy = 0.7300
Class 48: Accuracy = 0.8000
Class 49: Accuracy = 0.9000
Class 50: Accuracy = 0.8000
Class 51: Accuracy = 0.8400
Class 52: Accuracy = 0.8200
Class 53: Accuracy = 0.4800
Class 54: Accuracy = 0.2200
Class 55: Accuracy = 0.7800
Class 56: Accuracy = 0.9100
Class 57: Accuracy = 0.9600
Class 58: Accuracy = 0.5600
Class 59: Accuracy = 0.9000
Task 5, Epoch 5/5 => Loss -0.033, Train_accy 90.66, Test_accy 79.68: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5/5 [04:32<00:00, 54.48s/it]
2023-12-17 17:44:45,701 [l2p_pseudolabeling.py] => Task 5, Epoch 5/5 => Loss -0.033, Train_accy 90.66, Test_accy 79.68
2023-12-17 17:45:28,052 [trainer.py] => No NME accuracy.
2023-12-17 17:45:28,052 [trainer.py] => CNN: {'total': 79.68, '00-09': 74.7, '10-19': 78.1, '20-29': 80.6, '30-39': 83.6, '40-49': 88.4, '50-59': 72.7, 'old': 81.08, 'new': 72.7}
2023-12-17 17:45:28,052 [trainer.py] => CNN top1 curve: [94.8, 91.7, 87.17, 84.5, 81.72, 79.68]
2023-12-17 17:45:28,052 [trainer.py] => CNN top5 curve: [99.4, 98.6, 98.5, 98.15, 97.56, 97.23]

Average Accuracy (CNN): 86.59499999999998
2023-12-17 17:45:28,053 [trainer.py] => Average Accuracy (CNN): 86.59499999999998 

2023-12-17 17:45:28,054 [trainer.py] => All params: 171816392
2023-12-17 17:45:28,055 [trainer.py] => Trainable params: 122980
2023-12-17 17:45:28,055 [l2p_pseudolabeling.py] => Learning on 60-70
2023-12-17 17:45:28,116 [l2p_pseudolabeling.py] => start pseudo labeling...
2023-12-17 17:46:08,292 [l2p_pseudolabeling.py] => It will add 3116 pseudo labelled samples
2023-12-17 17:46:08,292 [l2p_pseudolabeling.py] => pseudo labeling finished
Task 6, Epoch 4/5 => Loss -0.094, Train_accy 92.74:  80%|███████████████████████████████████████████████████████████████████████████████████████████▏                      | 4/5 [15:01<03:45, 225.16s/it]Class 0: Accuracy = 0.6700
Class 1: Accuracy = 0.8200
Class 2: Accuracy = 0.6400
Class 3: Accuracy = 0.9900
Class 4: Accuracy = 0.2200
Class 5: Accuracy = 0.6900
Class 6: Accuracy = 0.7900
Class 7: Accuracy = 0.8800
Class 8: Accuracy = 0.7100
Class 9: Accuracy = 0.6600
Class 10: Accuracy = 0.6700
Class 11: Accuracy = 0.9800
Class 12: Accuracy = 0.8400
Class 13: Accuracy = 0.9300
Class 14: Accuracy = 0.4200
Class 15: Accuracy = 0.8900
Class 16: Accuracy = 0.6600
Class 17: Accuracy = 0.6900
Class 18: Accuracy = 0.6600
Class 19: Accuracy = 0.7000
Class 20: Accuracy = 0.6100
Class 21: Accuracy = 0.6200
Class 22: Accuracy = 0.8700
Class 23: Accuracy = 0.9800
Class 24: Accuracy = 0.8300
Class 25: Accuracy = 0.9200
Class 26: Accuracy = 0.8900
Class 27: Accuracy = 0.5100
Class 28: Accuracy = 0.9100
Class 29: Accuracy = 0.9800
Class 30: Accuracy = 0.8700
Class 31: Accuracy = 0.4000
Class 32: Accuracy = 0.7000
Class 33: Accuracy = 0.9800
Class 34: Accuracy = 0.9300
Class 35: Accuracy = 0.7400
Class 36: Accuracy = 0.9800
Class 37: Accuracy = 0.8500
Class 38: Accuracy = 0.9500
Class 39: Accuracy = 0.9400
Class 40: Accuracy = 0.8700
Class 41: Accuracy = 0.7100
Class 42: Accuracy = 0.8500
Class 43: Accuracy = 0.9400
Class 44: Accuracy = 0.9700
Class 45: Accuracy = 0.9600
Class 46: Accuracy = 0.9900
Class 47: Accuracy = 0.6600
Class 48: Accuracy = 0.7500
Class 49: Accuracy = 0.9500
Class 50: Accuracy = 0.7800
Class 51: Accuracy = 0.8100
Class 52: Accuracy = 0.8200
Class 53: Accuracy = 0.4000
Class 54: Accuracy = 0.2400
Class 55: Accuracy = 0.3500
Class 56: Accuracy = 0.7300
Class 57: Accuracy = 0.8200
Class 58: Accuracy = 0.5600
Class 59: Accuracy = 0.8500
Class 60: Accuracy = 0.9700
Class 61: Accuracy = 0.9700
Class 62: Accuracy = 0.8400
Class 63: Accuracy = 0.9300
Class 64: Accuracy = 0.7900
Class 65: Accuracy = 0.9500
Class 66: Accuracy = 0.9700
Class 67: Accuracy = 0.9800
Class 68: Accuracy = 0.9700
Class 69: Accuracy = 0.9800
Task 6, Epoch 5/5 => Loss -0.128, Train_accy 93.77, Test_accy 79.04: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████| 5/5 [16:42<00:00, 200.49s/it]
2023-12-17 18:02:50,791 [l2p_pseudolabeling.py] => Task 6, Epoch 5/5 => Loss -0.128, Train_accy 93.77, Test_accy 79.04
2023-12-17 18:03:41,298 [trainer.py] => No NME accuracy.
2023-12-17 18:03:41,299 [trainer.py] => CNN: {'total': 79.04, '00-09': 70.7, '10-19': 74.4, '20-29': 81.2, '30-39': 83.4, '40-49': 86.5, '50-59': 63.6, '60-69': 93.5, 'old': 76.63, 'new': 93.5}
2023-12-17 18:03:41,299 [trainer.py] => CNN top1 curve: [94.8, 91.7, 87.17, 84.5, 81.72, 79.68, 79.04]
2023-12-17 18:03:41,299 [trainer.py] => CNN top5 curve: [99.4, 98.6, 98.5, 98.15, 97.56, 97.23, 97.16]

Average Accuracy (CNN): 85.51571428571427
2023-12-17 18:03:41,299 [trainer.py] => Average Accuracy (CNN): 85.51571428571427 

2023-12-17 18:03:41,301 [trainer.py] => All params: 171816392
2023-12-17 18:03:41,302 [trainer.py] => Trainable params: 122980
2023-12-17 18:03:41,302 [l2p_pseudolabeling.py] => Learning on 70-80
2023-12-17 18:03:41,372 [l2p_pseudolabeling.py] => start pseudo labeling...
2023-12-17 18:04:20,493 [l2p_pseudolabeling.py] => It will add 2776 pseudo labelled samples
2023-12-17 18:04:20,494 [l2p_pseudolabeling.py] => pseudo labeling finished
Task 7, Epoch 4/5 => Loss -0.094, Train_accy 92.67:  80%|████████████████████████████████████████████████████████████████████████████████████████████                       | 4/5 [03:06<00:47, 47.02s/it]Class 0: Accuracy = 0.6300
Class 1: Accuracy = 0.8500
Class 2: Accuracy = 0.5900
Class 3: Accuracy = 0.9900
Class 4: Accuracy = 0.2900
Class 5: Accuracy = 0.6400
Class 6: Accuracy = 0.8400
Class 7: Accuracy = 0.8500
Class 8: Accuracy = 0.6900
Class 9: Accuracy = 0.6900
Class 10: Accuracy = 0.6600
Class 11: Accuracy = 0.9700
Class 12: Accuracy = 0.8300
Class 13: Accuracy = 0.9100
Class 14: Accuracy = 0.5100
Class 15: Accuracy = 0.8700
Class 16: Accuracy = 0.6400
Class 17: Accuracy = 0.6900
Class 18: Accuracy = 0.7400
Class 19: Accuracy = 0.7200
Class 20: Accuracy = 0.7600
Class 21: Accuracy = 0.6000
Class 22: Accuracy = 0.8600
Class 23: Accuracy = 0.9800
Class 24: Accuracy = 0.7800
Class 25: Accuracy = 0.9100
Class 26: Accuracy = 0.8900
Class 27: Accuracy = 0.4800
Class 28: Accuracy = 0.9100
Class 29: Accuracy = 0.9900
Class 30: Accuracy = 0.8400
Class 31: Accuracy = 0.4300
Class 32: Accuracy = 0.7400
Class 33: Accuracy = 0.9800
Class 34: Accuracy = 0.9400
Class 35: Accuracy = 0.7000
Class 36: Accuracy = 0.9800
Class 37: Accuracy = 0.8400
Class 38: Accuracy = 0.9500
Class 39: Accuracy = 0.9000
Class 40: Accuracy = 0.8700
Class 41: Accuracy = 0.7000
Class 42: Accuracy = 0.7400
Class 43: Accuracy = 0.9400
Class 44: Accuracy = 0.9800
Class 45: Accuracy = 0.9700
Class 46: Accuracy = 0.8000
Class 47: Accuracy = 0.6700
Class 48: Accuracy = 0.7600
Class 49: Accuracy = 0.9600
Class 50: Accuracy = 0.7700
Class 51: Accuracy = 0.0500
Class 52: Accuracy = 0.8100
Class 53: Accuracy = 0.4700
Class 54: Accuracy = 0.1800
Class 55: Accuracy = 0.3900
Class 56: Accuracy = 0.7900
Class 57: Accuracy = 0.6100
Class 58: Accuracy = 0.5600
Class 59: Accuracy = 0.8700
Class 60: Accuracy = 0.9500
Class 61: Accuracy = 0.9600
Class 62: Accuracy = 0.3700
Class 63: Accuracy = 0.9100
Class 64: Accuracy = 0.8500
Class 65: Accuracy = 0.9600
Class 66: Accuracy = 0.9400
Class 67: Accuracy = 0.9800
Class 68: Accuracy = 0.9600
Class 69: Accuracy = 0.9800
Class 70: Accuracy = 0.0500
Class 71: Accuracy = 0.7600
Class 72: Accuracy = 0.9100
Class 73: Accuracy = 0.8600
Class 74: Accuracy = 0.6700
Class 75: Accuracy = 0.5800
Class 76: Accuracy = 0.3200
Class 77: Accuracy = 0.8900
Class 78: Accuracy = 0.9800
Class 79: Accuracy = 0.7500
Task 7, Epoch 5/5 => Loss -0.109, Train_accy 93.62, Test_accy 75.72: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5/5 [04:48<00:00, 57.74s/it]
2023-12-17 18:09:09,193 [l2p_pseudolabeling.py] => Task 7, Epoch 5/5 => Loss -0.109, Train_accy 93.62, Test_accy 75.72
2023-12-17 18:10:06,870 [trainer.py] => No NME accuracy.
2023-12-17 18:10:06,870 [trainer.py] => CNN: {'total': 75.72, '00-09': 70.6, '10-19': 75.4, '20-29': 81.6, '30-39': 83.0, '40-49': 83.9, '50-59': 55.0, '60-69': 88.6, '70-79': 67.7, 'old': 76.87, 'new': 67.7}
2023-12-17 18:10:06,870 [trainer.py] => CNN top1 curve: [94.8, 91.7, 87.17, 84.5, 81.72, 79.68, 79.04, 75.72]
2023-12-17 18:10:06,870 [trainer.py] => CNN top5 curve: [99.4, 98.6, 98.5, 98.15, 97.56, 97.23, 97.16, 96.66]

Average Accuracy (CNN): 84.29124999999999
2023-12-17 18:10:06,870 [trainer.py] => Average Accuracy (CNN): 84.29124999999999 

2023-12-17 18:10:06,872 [trainer.py] => All params: 171816392
2023-12-17 18:10:06,874 [trainer.py] => Trainable params: 122980
2023-12-17 18:10:06,874 [l2p_pseudolabeling.py] => Learning on 80-90
2023-12-17 18:10:06,943 [l2p_pseudolabeling.py] => start pseudo labeling...
2023-12-17 18:10:49,101 [l2p_pseudolabeling.py] => It will add 2818 pseudo labelled samples
2023-12-17 18:10:49,101 [l2p_pseudolabeling.py] => pseudo labeling finished
Task 8, Epoch 4/5 => Loss -0.090, Train_accy 92.94:  80%|████████████████████████████████████████████████████████████████████████████████████████████                       | 4/5 [03:06<00:46, 46.59s/it]Class 0: Accuracy = 0.5400
Class 1: Accuracy = 0.7400
Class 2: Accuracy = 0.5500
Class 3: Accuracy = 0.9900
Class 4: Accuracy = 0.2000
Class 5: Accuracy = 0.6100
Class 6: Accuracy = 0.7900
Class 7: Accuracy = 0.8600
Class 8: Accuracy = 0.6900
Class 9: Accuracy = 0.5400
Class 10: Accuracy = 0.6800
Class 11: Accuracy = 0.9700
Class 12: Accuracy = 0.8500
Class 13: Accuracy = 0.6900
Class 14: Accuracy = 0.4200
Class 15: Accuracy = 0.8400
Class 16: Accuracy = 0.7000
Class 17: Accuracy = 0.6600
Class 18: Accuracy = 0.7000
Class 19: Accuracy = 0.7700
Class 20: Accuracy = 0.7500
Class 21: Accuracy = 0.3500
Class 22: Accuracy = 0.8600
Class 23: Accuracy = 0.9800
Class 24: Accuracy = 0.7400
Class 25: Accuracy = 0.9300
Class 26: Accuracy = 0.9000
Class 27: Accuracy = 0.4200
Class 28: Accuracy = 0.9000
Class 29: Accuracy = 0.9900
Class 30: Accuracy = 0.8600
Class 31: Accuracy = 0.4200
Class 32: Accuracy = 0.7100
Class 33: Accuracy = 0.9500
Class 34: Accuracy = 0.8900
Class 35: Accuracy = 0.6900
Class 36: Accuracy = 0.9700
Class 37: Accuracy = 0.8500
Class 38: Accuracy = 0.9500
Class 39: Accuracy = 0.9200
Class 40: Accuracy = 0.8500
Class 41: Accuracy = 0.6400
Class 42: Accuracy = 0.6900
Class 43: Accuracy = 0.9500
Class 44: Accuracy = 0.9500
Class 45: Accuracy = 0.9600
Class 46: Accuracy = 0.8200
Class 47: Accuracy = 0.5500
Class 48: Accuracy = 0.7700
Class 49: Accuracy = 0.9400
Class 50: Accuracy = 0.7300
Class 51: Accuracy = 0.0500
Class 52: Accuracy = 0.7800
Class 53: Accuracy = 0.3800
Class 54: Accuracy = 0.1700
Class 55: Accuracy = 0.3500
Class 56: Accuracy = 0.7700
Class 57: Accuracy = 0.6000
Class 58: Accuracy = 0.5300
Class 59: Accuracy = 0.8300
Class 60: Accuracy = 0.9400
Class 61: Accuracy = 0.9600
Class 62: Accuracy = 0.5100
Class 63: Accuracy = 0.9000
Class 64: Accuracy = 0.4300
Class 65: Accuracy = 0.9500
Class 66: Accuracy = 0.9300
Class 67: Accuracy = 0.9900
Class 68: Accuracy = 0.9800
Class 69: Accuracy = 0.9800
Class 70: Accuracy = 0.0700
Class 71: Accuracy = 0.7100
Class 72: Accuracy = 0.8900
Class 73: Accuracy = 0.8200
Class 74: Accuracy = 0.5900
Class 75: Accuracy = 0.6200
Class 76: Accuracy = 0.3200
Class 77: Accuracy = 0.8900
Class 78: Accuracy = 0.9900
Class 79: Accuracy = 0.6400
Class 80: Accuracy = 0.8400
Class 81: Accuracy = 0.9500
Class 82: Accuracy = 0.9100
Class 83: Accuracy = 0.8500
Class 84: Accuracy = 0.9100
Class 85: Accuracy = 0.4900
Class 86: Accuracy = 0.9700
Class 87: Accuracy = 0.6300
Class 88: Accuracy = 0.8500
Class 89: Accuracy = 0.7100
Task 8, Epoch 5/5 => Loss -0.106, Train_accy 93.68, Test_accy 73.72: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5/5 [04:56<00:00, 59.37s/it]
2023-12-17 18:15:45,960 [l2p_pseudolabeling.py] => Task 8, Epoch 5/5 => Loss -0.106, Train_accy 93.68, Test_accy 73.72
2023-12-17 18:16:50,638 [trainer.py] => No NME accuracy.
2023-12-17 18:16:50,638 [trainer.py] => CNN: {'total': 73.72, '00-09': 65.1, '10-19': 72.8, '20-29': 78.2, '30-39': 82.1, '40-49': 81.2, '50-59': 51.9, '60-69': 85.7, '70-79': 65.4, '80-89': 81.1, 'old': 72.8, 'new': 81.1}
2023-12-17 18:16:50,638 [trainer.py] => CNN top1 curve: [94.8, 91.7, 87.17, 84.5, 81.72, 79.68, 79.04, 75.72, 73.72]
2023-12-17 18:16:50,639 [trainer.py] => CNN top5 curve: [99.4, 98.6, 98.5, 98.15, 97.56, 97.23, 97.16, 96.66, 96.11]

Average Accuracy (CNN): 83.11666666666666
2023-12-17 18:16:50,639 [trainer.py] => Average Accuracy (CNN): 83.11666666666666 

2023-12-17 18:16:50,640 [trainer.py] => All params: 171816392
2023-12-17 18:16:50,641 [trainer.py] => Trainable params: 122980
2023-12-17 18:16:50,641 [l2p_pseudolabeling.py] => Learning on 90-100
2023-12-17 18:16:50,706 [l2p_pseudolabeling.py] => start pseudo labeling...
2023-12-17 18:17:32,281 [l2p_pseudolabeling.py] => It will add 2815 pseudo labelled samples
2023-12-17 18:17:32,281 [l2p_pseudolabeling.py] => pseudo labeling finished
Task 9, Epoch 4/5 => Loss -0.038, Train_accy 90.77:  80%|████████████████████████████████████████████████████████████████████████████████████████████                       | 4/5 [03:10<00:47, 47.28s/it]Class 0: Accuracy = 0.5600
Class 1: Accuracy = 0.7800
Class 2: Accuracy = 0.5400
Class 3: Accuracy = 0.9300
Class 4: Accuracy = 0.1900
Class 5: Accuracy = 0.6400
Class 6: Accuracy = 0.7600
Class 7: Accuracy = 0.8500
Class 8: Accuracy = 0.7000
Class 9: Accuracy = 0.4900
Class 10: Accuracy = 0.6700
Class 11: Accuracy = 0.9500
Class 12: Accuracy = 0.7800
Class 13: Accuracy = 0.7500
Class 14: Accuracy = 0.4300
Class 15: Accuracy = 0.8500
Class 16: Accuracy = 0.7100
Class 17: Accuracy = 0.6800
Class 18: Accuracy = 0.7500
Class 19: Accuracy = 0.8000
Class 20: Accuracy = 0.7700
Class 21: Accuracy = 0.3900
Class 22: Accuracy = 0.8600
Class 23: Accuracy = 0.9800
Class 24: Accuracy = 0.7200
Class 25: Accuracy = 0.9100
Class 26: Accuracy = 0.9100
Class 27: Accuracy = 0.4000
Class 28: Accuracy = 0.8800
Class 29: Accuracy = 0.9900
Class 30: Accuracy = 0.8500
Class 31: Accuracy = 0.4400
Class 32: Accuracy = 0.6700
Class 33: Accuracy = 0.9500
Class 34: Accuracy = 0.9100
Class 35: Accuracy = 0.6800
Class 36: Accuracy = 0.9600
Class 37: Accuracy = 0.8400
Class 38: Accuracy = 0.9400
Class 39: Accuracy = 0.9300
Class 40: Accuracy = 0.8900
Class 41: Accuracy = 0.2500
Class 42: Accuracy = 0.7200
Class 43: Accuracy = 0.9500
Class 44: Accuracy = 0.9700
Class 45: Accuracy = 0.9600
Class 46: Accuracy = 0.8100
Class 47: Accuracy = 0.5300
Class 48: Accuracy = 0.7400
Class 49: Accuracy = 0.9400
Class 50: Accuracy = 0.7500
Class 51: Accuracy = 0.0500
Class 52: Accuracy = 0.7700
Class 53: Accuracy = 0.3200
Class 54: Accuracy = 0.2200
Class 55: Accuracy = 0.3600
Class 56: Accuracy = 0.7900
Class 57: Accuracy = 0.6100
Class 58: Accuracy = 0.5900
Class 59: Accuracy = 0.8700
Class 60: Accuracy = 0.9200
Class 61: Accuracy = 0.9500
Class 62: Accuracy = 0.4800
Class 63: Accuracy = 0.8700
Class 64: Accuracy = 0.5900
Class 65: Accuracy = 0.9500
Class 66: Accuracy = 0.9300
Class 67: Accuracy = 0.9900
Class 68: Accuracy = 0.9800
Class 69: Accuracy = 0.9400
Class 70: Accuracy = 0.0900
Class 71: Accuracy = 0.5900
Class 72: Accuracy = 0.8800
Class 73: Accuracy = 0.8400
Class 74: Accuracy = 0.6300
Class 75: Accuracy = 0.6000
Class 76: Accuracy = 0.3100
Class 77: Accuracy = 0.8900
Class 78: Accuracy = 0.9800
Class 79: Accuracy = 0.6800
Class 80: Accuracy = 0.8300
Class 81: Accuracy = 0.9700
Class 82: Accuracy = 0.9200
Class 83: Accuracy = 0.8600
Class 84: Accuracy = 0.8900
Class 85: Accuracy = 0.5800
Class 86: Accuracy = 0.9700
Class 87: Accuracy = 0.6500
Class 88: Accuracy = 0.8500
Class 89: Accuracy = 0.6900
Class 90: Accuracy = 0.9300
Class 91: Accuracy = 0.9800
Class 92: Accuracy = 0.4900
Class 93: Accuracy = 0.7600
Class 94: Accuracy = 0.9500
Class 95: Accuracy = 0.5900
Class 96: Accuracy = 0.7800
Class 97: Accuracy = 0.8600
Class 98: Accuracy = 0.9300
Class 99: Accuracy = 0.3900
Task 9, Epoch 5/5 => Loss -0.054, Train_accy 91.37, Test_accy 73.84: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5/5 [05:07<00:00, 61.47s/it]
2023-12-17 18:22:39,670 [l2p_pseudolabeling.py] => Task 9, Epoch 5/5 => Loss -0.054, Train_accy 91.37, Test_accy 73.84
2023-12-17 18:23:48,580 [trainer.py] => No NME accuracy.
2023-12-17 18:23:48,580 [trainer.py] => CNN: {'total': 73.84, '00-09': 64.4, '10-19': 73.7, '20-29': 78.1, '30-39': 81.7, '40-49': 77.6, '50-59': 53.3, '60-69': 86.0, '70-79': 64.9, '80-89': 82.1, '90-99': 76.6, 'old': 73.53, 'new': 76.6}
2023-12-17 18:23:48,580 [trainer.py] => CNN top1 curve: [94.8, 91.7, 87.17, 84.5, 81.72, 79.68, 79.04, 75.72, 73.72, 73.84]
2023-12-17 18:23:48,580 [trainer.py] => CNN top5 curve: [99.4, 98.6, 98.5, 98.15, 97.56, 97.23, 97.16, 96.66, 96.11, 95.74]

Average Accuracy (CNN): 82.189
2023-12-17 18:23:48,580 [trainer.py] => Average Accuracy (CNN): 82.189 
