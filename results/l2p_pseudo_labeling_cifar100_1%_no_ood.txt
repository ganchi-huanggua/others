(lhz-torch-2.0) lhz@csgpu-SYS-4029GP-TRT:~/code/LAMDA-PILOT$ CUDA_LAUNCH_BLOCKING=1 python main.py --config=./exps/l2p_pseudolabeling.json
2023-12-17 15:51:55,375 [trainer.py] => config: ./exps/l2p_pseudolabeling.json
2023-12-17 15:51:55,375 [trainer.py] => prefix:  
2023-12-17 15:51:55,375 [trainer.py] => dataset: cifar224
2023-12-17 15:51:55,375 [trainer.py] => memory_size: 0
2023-12-17 15:51:55,375 [trainer.py] => memory_per_class: 0
2023-12-17 15:51:55,375 [trainer.py] => fixed_memory: False
2023-12-17 15:51:55,375 [trainer.py] => shuffle: True
2023-12-17 15:51:55,375 [trainer.py] => init_cls: 10
2023-12-17 15:51:55,375 [trainer.py] => increment: 10
2023-12-17 15:51:55,375 [trainer.py] => model_name: l2p_pseudolabeling
2023-12-17 15:51:55,375 [trainer.py] => backbone_type: vit_base_patch16_224_l2p
2023-12-17 15:51:55,375 [trainer.py] => get_original_backbone: True
2023-12-17 15:51:55,375 [trainer.py] => device: [device(type='cuda', index=0)]
2023-12-17 15:51:55,375 [trainer.py] => seed: 1993
2023-12-17 15:51:55,375 [trainer.py] => tuned_epoch: 5
2023-12-17 15:51:55,375 [trainer.py] => init_lr: 0.001875
2023-12-17 15:51:55,375 [trainer.py] => batch_size: 16
2023-12-17 15:51:55,375 [trainer.py] => weight_decay: 0
2023-12-17 15:51:55,375 [trainer.py] => min_lr: 1e-05
2023-12-17 15:51:55,375 [trainer.py] => optimizer: adam
2023-12-17 15:51:55,375 [trainer.py] => scheduler: constant
2023-12-17 15:51:55,375 [trainer.py] => reinit_optimizer: True
2023-12-17 15:51:55,375 [trainer.py] => global_pool: token
2023-12-17 15:51:55,376 [trainer.py] => head_type: prompt
2023-12-17 15:51:55,376 [trainer.py] => freeze: ['blocks', 'patch_embed', 'cls_token', 'norm', 'pos_embed']
2023-12-17 15:51:55,376 [trainer.py] => pretrained: True
2023-12-17 15:51:55,376 [trainer.py] => drop: 0.0
2023-12-17 15:51:55,376 [trainer.py] => drop_path: 0.0
2023-12-17 15:51:55,376 [trainer.py] => prompt_pool: True
2023-12-17 15:51:55,376 [trainer.py] => pool_size: 10
2023-12-17 15:51:55,376 [trainer.py] => length: 5
2023-12-17 15:51:55,376 [trainer.py] => top_k: 5
2023-12-17 15:51:55,376 [trainer.py] => initializer: uniform
2023-12-17 15:51:55,376 [trainer.py] => prompt_key: True
2023-12-17 15:51:55,376 [trainer.py] => prompt_key_init: uniform
2023-12-17 15:51:55,376 [trainer.py] => use_prompt_mask: False
2023-12-17 15:51:55,376 [trainer.py] => shared_prompt_pool: False
2023-12-17 15:51:55,376 [trainer.py] => shared_prompt_key: False
2023-12-17 15:51:55,376 [trainer.py] => batchwise_prompt: True
2023-12-17 15:51:55,376 [trainer.py] => embedding_key: cls
2023-12-17 15:51:55,376 [trainer.py] => predefined_key: 
2023-12-17 15:51:55,376 [trainer.py] => pull_constraint: True
2023-12-17 15:51:55,376 [trainer.py] => pull_constraint_coeff: 0.1
2023-12-17 15:51:55,376 [trainer.py] => semi_supervised_mode: True
2023-12-17 15:51:55,376 [trainer.py] => labeled_ratio: 0.01
2023-12-17 15:51:55,376 [trainer.py] => unlabeled_data_distribution_mode: no_ood
2023-12-17 15:51:55,376 [trainer.py] => confidence_threshold: 0.9
Files already downloaded and verified
Files already downloaded and verified
2023-12-17 15:51:57,248 [data_manager.py] => [68, 56, 78, 8, 23, 84, 90, 65, 74, 76, 40, 89, 3, 92, 55, 9, 26, 80, 43, 38, 58, 70, 77, 1, 85, 19, 17, 50, 28, 53, 13, 81, 45, 82, 6, 59, 83, 16, 15, 44, 91, 41, 72, 60, 79, 52, 20, 10, 31, 54, 37, 95, 14, 71, 96, 98, 97, 2, 64, 66, 42, 22, 35, 86, 24, 34, 87, 21, 99, 0, 88, 27, 18, 94, 11, 12, 47, 25, 30, 46, 62, 69, 36, 61, 7, 63, 75, 5, 32, 4, 51, 48, 73, 93, 39, 67, 29, 49, 57, 33]
2023-12-17 15:52:01,224 [vision_transformer_l2p.py] => Resized position embedding: torch.Size([1, 197, 768]) to torch.Size([1, 222, 768])
2023-12-17 15:52:01,225 [vision_transformer_l2p.py] => Position embedding grid-size from [14, 14] to (14, 14)
2023-12-17 15:52:03,432 [l2p_pseudolabeling.py] => 85,940,836 model total parameters.
2023-12-17 15:52:03,433 [l2p_pseudolabeling.py] => 122,980 model training parameters.
2023-12-17 15:52:03,433 [l2p_pseudolabeling.py] => prompt.prompt: 38400
2023-12-17 15:52:03,433 [l2p_pseudolabeling.py] => prompt.prompt_key: 7680
2023-12-17 15:52:03,434 [l2p_pseudolabeling.py] => head.weight: 76800
2023-12-17 15:52:03,434 [l2p_pseudolabeling.py] => head.bias: 100
2023-12-17 15:52:03,435 [trainer.py] => All params: 171816392
2023-12-17 15:52:03,436 [trainer.py] => Trainable params: 122980
2023-12-17 15:52:03,436 [l2p_pseudolabeling.py] => Learning on 0-10
2023-12-17 15:52:03,464 [l2p_pseudolabeling.py] => start pseudo labeling...
2023-12-17 15:52:24,208 [l2p_pseudolabeling.py] => It will add 774 pseudo labelled samples
2023-12-17 15:52:24,208 [l2p_pseudolabeling.py] => pseudo labeling finished
Task 0, Epoch 4/5 => Loss 0.251, Train_accy 89.44:  80%|████████████████████████████████████████████████████████████████████████████████████████████▊                       | 4/5 [00:38<00:09,  9.51s/it]Class 0: Accuracy = 0.9500
Class 1: Accuracy = 0.9900
Class 2: Accuracy = 0.9800
Class 3: Accuracy = 0.9100
Class 4: Accuracy = 0.9400
Class 5: Accuracy = 0.9600
Class 6: Accuracy = 0.7500
Class 7: Accuracy = 0.8300
Class 8: Accuracy = 0.4100
Class 9: Accuracy = 0.8700
Task 0, Epoch 5/5 => Loss 0.152, Train_accy 91.02, Test_accy 85.90: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████| 5/5 [00:54<00:00, 10.98s/it]
2023-12-17 15:53:19,327 [l2p_pseudolabeling.py] => Task 0, Epoch 5/5 => Loss 0.152, Train_accy 91.02, Test_accy 85.90
2023-12-17 15:53:26,745 [trainer.py] => No NME accuracy.
2023-12-17 15:53:26,745 [trainer.py] => CNN: {'total': 85.9, '00-09': 85.9, 'old': 0, 'new': 85.9}
2023-12-17 15:53:26,745 [trainer.py] => CNN top1 curve: [85.9]
2023-12-17 15:53:26,745 [trainer.py] => CNN top5 curve: [97.2]

Average Accuracy (CNN): 85.9
2023-12-17 15:53:26,745 [trainer.py] => Average Accuracy (CNN): 85.9 

2023-12-17 15:53:26,747 [trainer.py] => All params: 171816392
2023-12-17 15:53:26,749 [trainer.py] => Trainable params: 122980
2023-12-17 15:53:26,749 [l2p_pseudolabeling.py] => Learning on 10-20
2023-12-17 15:53:26,789 [l2p_pseudolabeling.py] => start pseudo labeling...
2023-12-17 15:53:47,087 [l2p_pseudolabeling.py] => It will add 1025 pseudo labelled samples
2023-12-17 15:53:47,087 [l2p_pseudolabeling.py] => pseudo labeling finished
Task 1, Epoch 4/5 => Loss 0.039, Train_accy 91.91:  80%|████████████████████████████████████████████████████████████████████████████████████████████▊                       | 4/5 [00:48<00:12, 12.16s/it]Class 0: Accuracy = 0.8900
Class 1: Accuracy = 0.9900
Class 2: Accuracy = 0.9800
Class 3: Accuracy = 0.8300
Class 4: Accuracy = 0.8900
Class 5: Accuracy = 0.9000
Class 6: Accuracy = 0.4900
Class 7: Accuracy = 0.7500
Class 8: Accuracy = 0.4400
Class 9: Accuracy = 0.8000
Class 10: Accuracy = 0.3400
Class 11: Accuracy = 0.9900
Class 12: Accuracy = 0.6000
Class 13: Accuracy = 0.8900
Class 14: Accuracy = 0.6800
Class 15: Accuracy = 0.9200
Class 16: Accuracy = 0.6500
Class 17: Accuracy = 0.6400
Class 18: Accuracy = 0.8000
Class 19: Accuracy = 0.8600
Task 1, Epoch 5/5 => Loss 0.034, Train_accy 90.98, Test_accy 76.65: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████| 5/5 [01:15<00:00, 15.01s/it]
2023-12-17 15:55:02,157 [l2p_pseudolabeling.py] => Task 1, Epoch 5/5 => Loss 0.034, Train_accy 90.98, Test_accy 76.65
2023-12-17 15:55:16,152 [trainer.py] => No NME accuracy.
2023-12-17 15:55:16,153 [trainer.py] => CNN: {'total': 76.65, '00-09': 79.6, '10-19': 73.7, 'old': 79.6, 'new': 73.7}
2023-12-17 15:55:16,153 [trainer.py] => CNN top1 curve: [85.9, 76.65]
2023-12-17 15:55:16,153 [trainer.py] => CNN top5 curve: [97.2, 93.2]

Average Accuracy (CNN): 81.275
2023-12-17 15:55:16,153 [trainer.py] => Average Accuracy (CNN): 81.275 

2023-12-17 15:55:16,154 [trainer.py] => All params: 171816392
2023-12-17 15:55:16,155 [trainer.py] => Trainable params: 122980
2023-12-17 15:55:16,155 [l2p_pseudolabeling.py] => Learning on 20-30
2023-12-17 15:55:16,198 [l2p_pseudolabeling.py] => start pseudo labeling...
2023-12-17 15:55:36,463 [l2p_pseudolabeling.py] => It will add 1094 pseudo labelled samples
2023-12-17 15:55:36,463 [l2p_pseudolabeling.py] => pseudo labeling finished
Task 2, Epoch 4/5 => Loss -0.117, Train_accy 94.41:  80%|████████████████████████████████████████████████████████████████████████████████████████████                       | 4/5 [00:51<00:12, 12.92s/it]Class 0: Accuracy = 0.9300
Class 1: Accuracy = 0.9700
Class 2: Accuracy = 0.9700
Class 3: Accuracy = 0.8000
Class 4: Accuracy = 0.8500
Class 5: Accuracy = 0.8000
Class 6: Accuracy = 0.4700
Class 7: Accuracy = 0.7100
Class 8: Accuracy = 0.1600
Class 9: Accuracy = 0.7100
Class 10: Accuracy = 0.0400
Class 11: Accuracy = 0.9900
Class 12: Accuracy = 0.5400
Class 13: Accuracy = 0.6300
Class 14: Accuracy = 0.6800
Class 15: Accuracy = 0.8100
Class 16: Accuracy = 0.6700
Class 17: Accuracy = 0.6200
Class 18: Accuracy = 0.8200
Class 19: Accuracy = 0.8700
Class 20: Accuracy = 0.5300
Class 21: Accuracy = 0.9800
Class 22: Accuracy = 0.8400
Class 23: Accuracy = 0.9600
Class 24: Accuracy = 0.6500
Class 25: Accuracy = 0.8700
Class 26: Accuracy = 0.1300
Class 27: Accuracy = 0.8000
Class 28: Accuracy = 0.9300
Class 29: Accuracy = 1.0000
Task 2, Epoch 5/5 => Loss -0.111, Train_accy 95.02, Test_accy 72.43: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5/5 [01:25<00:00, 17.06s/it]
2023-12-17 15:57:01,794 [l2p_pseudolabeling.py] => Task 2, Epoch 5/5 => Loss -0.111, Train_accy 95.02, Test_accy 72.43
2023-12-17 15:57:22,935 [trainer.py] => No NME accuracy.
2023-12-17 15:57:22,935 [trainer.py] => CNN: {'total': 72.43, '00-09': 73.7, '10-19': 66.7, '20-29': 76.9, 'old': 70.2, 'new': 76.9}
2023-12-17 15:57:22,935 [trainer.py] => CNN top1 curve: [85.9, 76.65, 72.43]
2023-12-17 15:57:22,935 [trainer.py] => CNN top5 curve: [97.2, 93.2, 91.97]

Average Accuracy (CNN): 78.32666666666667
2023-12-17 15:57:22,935 [trainer.py] => Average Accuracy (CNN): 78.32666666666667 

2023-12-17 15:57:22,937 [trainer.py] => All params: 171816392
2023-12-17 15:57:22,938 [trainer.py] => Trainable params: 122980
2023-12-17 15:57:22,938 [l2p_pseudolabeling.py] => Learning on 30-40
2023-12-17 15:57:22,982 [l2p_pseudolabeling.py] => start pseudo labeling...
2023-12-17 15:57:43,357 [l2p_pseudolabeling.py] => It will add 1090 pseudo labelled samples
2023-12-17 15:57:43,357 [l2p_pseudolabeling.py] => pseudo labeling finished
Task 3, Epoch 4/5 => Loss -0.147, Train_accy 94.74:  80%|████████████████████████████████████████████████████████████████████████████████████████████                       | 4/5 [00:51<00:12, 12.83s/it]Class 0: Accuracy = 0.9200
Class 1: Accuracy = 0.9300
Class 2: Accuracy = 0.9700
Class 3: Accuracy = 0.7200
Class 4: Accuracy = 0.7700
Class 5: Accuracy = 0.7100
Class 6: Accuracy = 0.2100
Class 7: Accuracy = 0.6700
Class 8: Accuracy = 0.1500
Class 9: Accuracy = 0.6500
Class 10: Accuracy = 0.0600
Class 11: Accuracy = 0.9900
Class 12: Accuracy = 0.4400
Class 13: Accuracy = 0.6500
Class 14: Accuracy = 0.7000
Class 15: Accuracy = 0.8100
Class 16: Accuracy = 0.6800
Class 17: Accuracy = 0.6200
Class 18: Accuracy = 0.7900
Class 19: Accuracy = 0.8600
Class 20: Accuracy = 0.5100
Class 21: Accuracy = 0.9700
Class 22: Accuracy = 0.8400
Class 23: Accuracy = 0.9500
Class 24: Accuracy = 0.6800
Class 25: Accuracy = 0.8500
Class 26: Accuracy = 0.2300
Class 27: Accuracy = 0.7500
Class 28: Accuracy = 0.9300
Class 29: Accuracy = 1.0000
Class 30: Accuracy = 0.7400
Class 31: Accuracy = 0.0100
Class 32: Accuracy = 0.0800
Class 33: Accuracy = 0.9600
Class 34: Accuracy = 0.9000
Class 35: Accuracy = 0.5900
Class 36: Accuracy = 0.5400
Class 37: Accuracy = 0.2100
Class 38: Accuracy = 0.9500
Class 39: Accuracy = 0.0200
Task 3, Epoch 5/5 => Loss -0.162, Train_accy 95.09, Test_accy 65.03: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5/5 [01:31<00:00, 18.36s/it]
2023-12-17 15:59:15,184 [l2p_pseudolabeling.py] => Task 3, Epoch 5/5 => Loss -0.162, Train_accy 95.09, Test_accy 65.03
2023-12-17 15:59:42,814 [trainer.py] => No NME accuracy.
2023-12-17 15:59:42,815 [trainer.py] => CNN: {'total': 65.03, '00-09': 67.0, '10-19': 66.0, '20-29': 77.1, '30-39': 50.0, 'old': 70.03, 'new': 50.0}
2023-12-17 15:59:42,815 [trainer.py] => CNN top1 curve: [85.9, 76.65, 72.43, 65.03]
2023-12-17 15:59:42,815 [trainer.py] => CNN top5 curve: [97.2, 93.2, 91.97, 87.38]

Average Accuracy (CNN): 75.0025
2023-12-17 15:59:42,815 [trainer.py] => Average Accuracy (CNN): 75.0025 

2023-12-17 15:59:42,816 [trainer.py] => All params: 171816392
2023-12-17 15:59:42,817 [trainer.py] => Trainable params: 122980
2023-12-17 15:59:42,817 [l2p_pseudolabeling.py] => Learning on 40-50
2023-12-17 15:59:42,864 [l2p_pseudolabeling.py] => start pseudo labeling...
2023-12-17 16:00:03,150 [l2p_pseudolabeling.py] => It will add 1378 pseudo labelled samples
2023-12-17 16:00:03,150 [l2p_pseudolabeling.py] => pseudo labeling finished
Task 4, Epoch 4/5 => Loss -0.092, Train_accy 92.30:  80%|████████████████████████████████████████████████████████████████████████████████████████████                       | 4/5 [01:03<00:15, 15.88s/it]Class 0: Accuracy = 0.8200
Class 1: Accuracy = 0.8800
Class 2: Accuracy = 0.9100
Class 3: Accuracy = 0.7000
Class 4: Accuracy = 0.4200
Class 5: Accuracy = 0.6100
Class 6: Accuracy = 0.1500
Class 7: Accuracy = 0.6200
Class 8: Accuracy = 0.1600
Class 9: Accuracy = 0.6600
Class 10: Accuracy = 0.0900
Class 11: Accuracy = 0.9900
Class 12: Accuracy = 0.3700
Class 13: Accuracy = 0.6700
Class 14: Accuracy = 0.6500
Class 15: Accuracy = 0.7900
Class 16: Accuracy = 0.6500
Class 17: Accuracy = 0.6100
Class 18: Accuracy = 0.8200
Class 19: Accuracy = 0.8500
Class 20: Accuracy = 0.6000
Class 21: Accuracy = 0.9600
Class 22: Accuracy = 0.7900
Class 23: Accuracy = 0.8800
Class 24: Accuracy = 0.6900
Class 25: Accuracy = 0.8300
Class 26: Accuracy = 0.2600
Class 27: Accuracy = 0.7400
Class 28: Accuracy = 0.8800
Class 29: Accuracy = 1.0000
Class 30: Accuracy = 0.7500
Class 31: Accuracy = 0.0100
Class 32: Accuracy = 0.0900
Class 33: Accuracy = 0.9600
Class 34: Accuracy = 0.8600
Class 35: Accuracy = 0.1700
Class 36: Accuracy = 0.5200
Class 37: Accuracy = 0.1800
Class 38: Accuracy = 0.9300
Class 39: Accuracy = 0.0000
Class 40: Accuracy = 0.7600
Class 41: Accuracy = 0.6600
Class 42: Accuracy = 0.0000
Class 43: Accuracy = 0.7400
Class 44: Accuracy = 0.7600
Class 45: Accuracy = 0.9800
Class 46: Accuracy = 0.9400
Class 47: Accuracy = 0.7900
Class 48: Accuracy = 0.8500
Class 49: Accuracy = 0.8000
Task 4, Epoch 5/5 => Loss -0.162, Train_accy 95.45, Test_accy 63.60: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5/5 [01:53<00:00, 22.74s/it]
2023-12-17 16:01:56,867 [l2p_pseudolabeling.py] => Task 4, Epoch 5/5 => Loss -0.162, Train_accy 95.45, Test_accy 63.60
2023-12-17 16:02:30,724 [trainer.py] => No NME accuracy.
2023-12-17 16:02:30,724 [trainer.py] => CNN: {'total': 63.6, '00-09': 59.3, '10-19': 64.9, '20-29': 76.3, '30-39': 44.7, '40-49': 72.8, 'old': 61.3, 'new': 72.8}
2023-12-17 16:02:30,724 [trainer.py] => CNN top1 curve: [85.9, 76.65, 72.43, 65.03, 63.6]
2023-12-17 16:02:30,724 [trainer.py] => CNN top5 curve: [97.2, 93.2, 91.97, 87.38, 87.84]

Average Accuracy (CNN): 72.72200000000001
2023-12-17 16:02:30,725 [trainer.py] => Average Accuracy (CNN): 72.72200000000001 

2023-12-17 16:02:30,726 [trainer.py] => All params: 171816392
2023-12-17 16:02:30,727 [trainer.py] => Trainable params: 122980
2023-12-17 16:02:30,728 [l2p_pseudolabeling.py] => Learning on 50-60
2023-12-17 16:02:30,773 [l2p_pseudolabeling.py] => start pseudo labeling...
2023-12-17 16:02:50,924 [l2p_pseudolabeling.py] => It will add 879 pseudo labelled samples
2023-12-17 16:02:50,924 [l2p_pseudolabeling.py] => pseudo labeling finished
Task 5, Epoch 4/5 => Loss -0.173, Train_accy 94.83:  80%|████████████████████████████████████████████████████████████████████████████████████████████                       | 4/5 [00:42<00:10, 10.56s/it]Class 0: Accuracy = 0.7800
Class 1: Accuracy = 0.8700
Class 2: Accuracy = 0.9300
Class 3: Accuracy = 0.7100
Class 4: Accuracy = 0.3100
Class 5: Accuracy = 0.6000
Class 6: Accuracy = 0.1300
Class 7: Accuracy = 0.6300
Class 8: Accuracy = 0.2000
Class 9: Accuracy = 0.6300
Class 10: Accuracy = 0.1000
Class 11: Accuracy = 0.9900
Class 12: Accuracy = 0.3500
Class 13: Accuracy = 0.6700
Class 14: Accuracy = 0.6800
Class 15: Accuracy = 0.7900
Class 16: Accuracy = 0.6900
Class 17: Accuracy = 0.6300
Class 18: Accuracy = 0.8300
Class 19: Accuracy = 0.8500
Class 20: Accuracy = 0.6600
Class 21: Accuracy = 0.9600
Class 22: Accuracy = 0.7900
Class 23: Accuracy = 0.8700
Class 24: Accuracy = 0.7100
Class 25: Accuracy = 0.8400
Class 26: Accuracy = 0.3000
Class 27: Accuracy = 0.6900
Class 28: Accuracy = 0.8700
Class 29: Accuracy = 1.0000
Class 30: Accuracy = 0.7700
Class 31: Accuracy = 0.0100
Class 32: Accuracy = 0.1100
Class 33: Accuracy = 0.9500
Class 34: Accuracy = 0.7800
Class 35: Accuracy = 0.1800
Class 36: Accuracy = 0.5600
Class 37: Accuracy = 0.1800
Class 38: Accuracy = 0.9300
Class 39: Accuracy = 0.0000
Class 40: Accuracy = 0.8300
Class 41: Accuracy = 0.6600
Class 42: Accuracy = 0.0000
Class 43: Accuracy = 0.5600
Class 44: Accuracy = 0.7200
Class 45: Accuracy = 0.9800
Class 46: Accuracy = 0.9400
Class 47: Accuracy = 0.7900
Class 48: Accuracy = 0.8800
Class 49: Accuracy = 0.7900
Class 50: Accuracy = 0.3100
Class 51: Accuracy = 0.9400
Class 52: Accuracy = 0.7700
Class 53: Accuracy = 0.8600
Class 54: Accuracy = 0.0000
Class 55: Accuracy = 0.6600
Class 56: Accuracy = 0.8100
Class 57: Accuracy = 0.7800
Class 58: Accuracy = 0.6700
Class 59: Accuracy = 0.7300
Task 5, Epoch 5/5 => Loss -0.072, Train_accy 93.76, Test_accy 63.68: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5/5 [01:34<00:00, 18.84s/it]
2023-12-17 16:04:25,138 [l2p_pseudolabeling.py] => Task 5, Epoch 5/5 => Loss -0.072, Train_accy 93.76, Test_accy 63.68
2023-12-17 16:05:05,843 [trainer.py] => No NME accuracy.
2023-12-17 16:05:05,844 [trainer.py] => CNN: {'total': 63.68, '00-09': 57.9, '10-19': 65.8, '20-29': 76.9, '30-39': 44.7, '40-49': 71.5, '50-59': 65.3, 'old': 63.36, 'new': 65.3}
2023-12-17 16:05:05,844 [trainer.py] => CNN top1 curve: [85.9, 76.65, 72.43, 65.03, 63.6, 63.68]
2023-12-17 16:05:05,844 [trainer.py] => CNN top5 curve: [97.2, 93.2, 91.97, 87.38, 87.84, 86.92]

Average Accuracy (CNN): 71.215
2023-12-17 16:05:05,844 [trainer.py] => Average Accuracy (CNN): 71.215 

2023-12-17 16:05:05,847 [trainer.py] => All params: 171816392
2023-12-17 16:05:05,849 [trainer.py] => Trainable params: 122980
2023-12-17 16:05:05,849 [l2p_pseudolabeling.py] => Learning on 60-70
2023-12-17 16:05:05,910 [l2p_pseudolabeling.py] => start pseudo labeling...
2023-12-17 16:05:26,147 [l2p_pseudolabeling.py] => It will add 1557 pseudo labelled samples
2023-12-17 16:05:26,147 [l2p_pseudolabeling.py] => pseudo labeling finished
Task 6, Epoch 4/5 => Loss -0.118, Train_accy 93.59:  80%|████████████████████████████████████████████████████████████████████████████████████████████                       | 4/5 [01:11<00:17, 17.87s/it]Class 0: Accuracy = 0.7600
Class 1: Accuracy = 0.8500
Class 2: Accuracy = 0.5800
Class 3: Accuracy = 0.6100
Class 4: Accuracy = 0.2900
Class 5: Accuracy = 0.5600
Class 6: Accuracy = 0.0800
Class 7: Accuracy = 0.6100
Class 8: Accuracy = 0.1300
Class 9: Accuracy = 0.6000
Class 10: Accuracy = 0.1300
Class 11: Accuracy = 0.9900
Class 12: Accuracy = 0.2500
Class 13: Accuracy = 0.7000
Class 14: Accuracy = 0.6100
Class 15: Accuracy = 0.8100
Class 16: Accuracy = 0.7000
Class 17: Accuracy = 0.6000
Class 18: Accuracy = 0.2300
Class 19: Accuracy = 0.8000
Class 20: Accuracy = 0.7600
Class 21: Accuracy = 0.9400
Class 22: Accuracy = 0.7900
Class 23: Accuracy = 0.9000
Class 24: Accuracy = 0.6800
Class 25: Accuracy = 0.8300
Class 26: Accuracy = 0.4100
Class 27: Accuracy = 0.6900
Class 28: Accuracy = 0.8700
Class 29: Accuracy = 1.0000
Class 30: Accuracy = 0.7400
Class 31: Accuracy = 0.0100
Class 32: Accuracy = 0.1200
Class 33: Accuracy = 0.9500
Class 34: Accuracy = 0.7400
Class 35: Accuracy = 0.0800
Class 36: Accuracy = 0.5500
Class 37: Accuracy = 0.1700
Class 38: Accuracy = 0.8900
Class 39: Accuracy = 0.0000
Class 40: Accuracy = 0.8200
Class 41: Accuracy = 0.6300
Class 42: Accuracy = 0.0000
Class 43: Accuracy = 0.4500
Class 44: Accuracy = 0.6800
Class 45: Accuracy = 0.9800
Class 46: Accuracy = 0.9500
Class 47: Accuracy = 0.7600
Class 48: Accuracy = 0.9000
Class 49: Accuracy = 0.8000
Class 50: Accuracy = 0.4400
Class 51: Accuracy = 0.9200
Class 52: Accuracy = 0.7500
Class 53: Accuracy = 0.8600
Class 54: Accuracy = 0.0000
Class 55: Accuracy = 0.5500
Class 56: Accuracy = 0.7200
Class 57: Accuracy = 0.6800
Class 58: Accuracy = 0.6700
Class 59: Accuracy = 0.7000
Class 60: Accuracy = 0.9400
Class 61: Accuracy = 0.7500
Class 62: Accuracy = 0.1600
Class 63: Accuracy = 0.8000
Class 64: Accuracy = 0.9000
Class 65: Accuracy = 0.8300
Class 66: Accuracy = 0.7400
Class 67: Accuracy = 0.9800
Class 68: Accuracy = 0.9200
Class 69: Accuracy = 0.9100
Task 6, Epoch 5/5 => Loss -0.125, Train_accy 94.03, Test_accy 63.14: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5/5 [02:17<00:00, 27.44s/it]
2023-12-17 16:07:43,367 [l2p_pseudolabeling.py] => Task 6, Epoch 5/5 => Loss -0.125, Train_accy 94.03, Test_accy 63.14
2023-12-17 16:08:30,809 [trainer.py] => No NME accuracy.
2023-12-17 16:08:30,809 [trainer.py] => CNN: {'total': 63.14, '00-09': 50.7, '10-19': 58.2, '20-29': 78.7, '30-39': 42.5, '40-49': 69.7, '50-59': 62.9, '60-69': 79.3, 'old': 60.45, 'new': 79.3}
2023-12-17 16:08:30,809 [trainer.py] => CNN top1 curve: [85.9, 76.65, 72.43, 65.03, 63.6, 63.68, 63.14]
2023-12-17 16:08:30,810 [trainer.py] => CNN top5 curve: [97.2, 93.2, 91.97, 87.38, 87.84, 86.92, 86.49]

Average Accuracy (CNN): 70.06142857142858
2023-12-17 16:08:30,810 [trainer.py] => Average Accuracy (CNN): 70.06142857142858 

2023-12-17 16:08:30,811 [trainer.py] => All params: 171816392
2023-12-17 16:08:30,812 [trainer.py] => Trainable params: 122980
2023-12-17 16:08:30,812 [l2p_pseudolabeling.py] => Learning on 70-80
2023-12-17 16:08:30,865 [l2p_pseudolabeling.py] => start pseudo labeling...
2023-12-17 16:08:51,108 [l2p_pseudolabeling.py] => It will add 896 pseudo labelled samples
2023-12-17 16:08:51,108 [l2p_pseudolabeling.py] => pseudo labeling finished
Task 7, Epoch 4/5 => Loss -0.164, Train_accy 94.50:  80%|████████████████████████████████████████████████████████████████████████████████████████████                       | 4/5 [00:43<00:10, 10.74s/it]Class 0: Accuracy = 0.7000
Class 1: Accuracy = 0.8600
Class 2: Accuracy = 0.5900
Class 3: Accuracy = 0.6300
Class 4: Accuracy = 0.2600
Class 5: Accuracy = 0.5200
Class 6: Accuracy = 0.0900
Class 7: Accuracy = 0.6200
Class 8: Accuracy = 0.1300
Class 9: Accuracy = 0.5400
Class 10: Accuracy = 0.0900
Class 11: Accuracy = 0.9900
Class 12: Accuracy = 0.2400
Class 13: Accuracy = 0.7000
Class 14: Accuracy = 0.6000
Class 15: Accuracy = 0.8000
Class 16: Accuracy = 0.6800
Class 17: Accuracy = 0.6100
Class 18: Accuracy = 0.2800
Class 19: Accuracy = 0.7800
Class 20: Accuracy = 0.8000
Class 21: Accuracy = 0.9400
Class 22: Accuracy = 0.6900
Class 23: Accuracy = 0.8900
Class 24: Accuracy = 0.6800
Class 25: Accuracy = 0.8300
Class 26: Accuracy = 0.5100
Class 27: Accuracy = 0.7000
Class 28: Accuracy = 0.8900
Class 29: Accuracy = 1.0000
Class 30: Accuracy = 0.7000
Class 31: Accuracy = 0.0100
Class 32: Accuracy = 0.1300
Class 33: Accuracy = 0.9700
Class 34: Accuracy = 0.7000
Class 35: Accuracy = 0.0800
Class 36: Accuracy = 0.5200
Class 37: Accuracy = 0.1900
Class 38: Accuracy = 0.9000
Class 39: Accuracy = 0.0100
Class 40: Accuracy = 0.8000
Class 41: Accuracy = 0.6400
Class 42: Accuracy = 0.0000
Class 43: Accuracy = 0.4800
Class 44: Accuracy = 0.6700
Class 45: Accuracy = 0.9700
Class 46: Accuracy = 0.9100
Class 47: Accuracy = 0.7000
Class 48: Accuracy = 0.9000
Class 49: Accuracy = 0.7800
Class 50: Accuracy = 0.4200
Class 51: Accuracy = 0.8900
Class 52: Accuracy = 0.7500
Class 53: Accuracy = 0.8200
Class 54: Accuracy = 0.0000
Class 55: Accuracy = 0.4600
Class 56: Accuracy = 0.7000
Class 57: Accuracy = 0.4900
Class 58: Accuracy = 0.6900
Class 59: Accuracy = 0.7200
Class 60: Accuracy = 0.9300
Class 61: Accuracy = 0.7500
Class 62: Accuracy = 0.0800
Class 63: Accuracy = 0.8000
Class 64: Accuracy = 0.9100
Class 65: Accuracy = 0.8500
Class 66: Accuracy = 0.7500
Class 67: Accuracy = 0.9800
Class 68: Accuracy = 0.9200
Class 69: Accuracy = 0.9000
Class 70: Accuracy = 0.6600
Class 71: Accuracy = 0.1200
Class 72: Accuracy = 0.6000
Class 73: Accuracy = 0.6100
Class 74: Accuracy = 0.5400
Class 75: Accuracy = 0.7800
Class 76: Accuracy = 0.0000
Class 77: Accuracy = 0.6600
Class 78: Accuracy = 0.4300
Class 79: Accuracy = 0.3100
Task 7, Epoch 5/5 => Loss -0.181, Train_accy 96.41, Test_accy 60.28: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5/5 [01:48<00:00, 21.70s/it]
2023-12-17 16:10:39,608 [l2p_pseudolabeling.py] => Task 7, Epoch 5/5 => Loss -0.181, Train_accy 96.41, Test_accy 60.28
2023-12-17 16:11:33,779 [trainer.py] => No NME accuracy.
2023-12-17 16:11:33,779 [trainer.py] => CNN: {'total': 60.28, '00-09': 49.4, '10-19': 57.7, '20-29': 79.3, '30-39': 42.1, '40-49': 68.5, '50-59': 59.4, '60-69': 78.7, '70-79': 47.1, 'old': 62.16, 'new': 47.1}
2023-12-17 16:11:33,779 [trainer.py] => CNN top1 curve: [85.9, 76.65, 72.43, 65.03, 63.6, 63.68, 63.14, 60.28]
2023-12-17 16:11:33,779 [trainer.py] => CNN top5 curve: [97.2, 93.2, 91.97, 87.38, 87.84, 86.92, 86.49, 85.04]

Average Accuracy (CNN): 68.83875
2023-12-17 16:11:33,780 [trainer.py] => Average Accuracy (CNN): 68.83875 

2023-12-17 16:11:33,781 [trainer.py] => All params: 171816392
2023-12-17 16:11:33,782 [trainer.py] => Trainable params: 122980
2023-12-17 16:11:33,783 [l2p_pseudolabeling.py] => Learning on 80-90
2023-12-17 16:11:33,852 [l2p_pseudolabeling.py] => start pseudo labeling...
2023-12-17 16:11:54,120 [l2p_pseudolabeling.py] => It will add 1241 pseudo labelled samples
2023-12-17 16:11:54,121 [l2p_pseudolabeling.py] => pseudo labeling finished
Task 8, Epoch 4/5 => Loss -0.155, Train_accy 94.97:  80%|████████████████████████████████████████████████████████████████████████████████████████████                       | 4/5 [00:58<00:14, 14.56s/it]Class 0: Accuracy = 0.6900
Class 1: Accuracy = 0.8400
Class 2: Accuracy = 0.5900
Class 3: Accuracy = 0.6000
Class 4: Accuracy = 0.2500
Class 5: Accuracy = 0.4000
Class 6: Accuracy = 0.0800
Class 7: Accuracy = 0.6100
Class 8: Accuracy = 0.1600
Class 9: Accuracy = 0.4100
Class 10: Accuracy = 0.1200
Class 11: Accuracy = 0.9900
Class 12: Accuracy = 0.2100
Class 13: Accuracy = 0.6800
Class 14: Accuracy = 0.6200
Class 15: Accuracy = 0.7900
Class 16: Accuracy = 0.6300
Class 17: Accuracy = 0.6100
Class 18: Accuracy = 0.2900
Class 19: Accuracy = 0.7900
Class 20: Accuracy = 0.8400
Class 21: Accuracy = 0.9400
Class 22: Accuracy = 0.6700
Class 23: Accuracy = 0.8800
Class 24: Accuracy = 0.6900
Class 25: Accuracy = 0.8100
Class 26: Accuracy = 0.5100
Class 27: Accuracy = 0.6700
Class 28: Accuracy = 0.8900
Class 29: Accuracy = 1.0000
Class 30: Accuracy = 0.6900
Class 31: Accuracy = 0.0100
Class 32: Accuracy = 0.1200
Class 33: Accuracy = 0.9600
Class 34: Accuracy = 0.5700
Class 35: Accuracy = 0.1100
Class 36: Accuracy = 0.5300
Class 37: Accuracy = 0.1900
Class 38: Accuracy = 0.8900
Class 39: Accuracy = 0.0100
Class 40: Accuracy = 0.7500
Class 41: Accuracy = 0.6700
Class 42: Accuracy = 0.0000
Class 43: Accuracy = 0.4400
Class 44: Accuracy = 0.5800
Class 45: Accuracy = 0.9700
Class 46: Accuracy = 0.9200
Class 47: Accuracy = 0.6300
Class 48: Accuracy = 0.9100
Class 49: Accuracy = 0.7700
Class 50: Accuracy = 0.5100
Class 51: Accuracy = 0.8800
Class 52: Accuracy = 0.7400
Class 53: Accuracy = 0.8100
Class 54: Accuracy = 0.0000
Class 55: Accuracy = 0.4000
Class 56: Accuracy = 0.7000
Class 57: Accuracy = 0.5200
Class 58: Accuracy = 0.6800
Class 59: Accuracy = 0.7200
Class 60: Accuracy = 0.9400
Class 61: Accuracy = 0.7000
Class 62: Accuracy = 0.0900
Class 63: Accuracy = 0.8100
Class 64: Accuracy = 0.4400
Class 65: Accuracy = 0.8500
Class 66: Accuracy = 0.7300
Class 67: Accuracy = 0.9700
Class 68: Accuracy = 0.9300
Class 69: Accuracy = 0.9100
Class 70: Accuracy = 0.6500
Class 71: Accuracy = 0.1300
Class 72: Accuracy = 0.5200
Class 73: Accuracy = 0.4900
Class 74: Accuracy = 0.5200
Class 75: Accuracy = 0.7600
Class 76: Accuracy = 0.0000
Class 77: Accuracy = 0.5500
Class 78: Accuracy = 0.4100
Class 79: Accuracy = 0.3300
Class 80: Accuracy = 0.5100
Class 81: Accuracy = 0.8900
Class 82: Accuracy = 0.5700
Class 83: Accuracy = 0.5700
Class 84: Accuracy = 0.9600
Class 85: Accuracy = 0.3800
Class 86: Accuracy = 0.9000
Class 87: Accuracy = 0.8400
Class 88: Accuracy = 0.4900
Class 89: Accuracy = 0.0300
Task 8, Epoch 5/5 => Loss -0.181, Train_accy 95.74, Test_accy 58.68: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5/5 [02:14<00:00, 26.86s/it]
2023-12-17 16:14:08,435 [l2p_pseudolabeling.py] => Task 8, Epoch 5/5 => Loss -0.181, Train_accy 95.74, Test_accy 58.68
2023-12-17 16:15:09,536 [trainer.py] => No NME accuracy.
2023-12-17 16:15:09,536 [trainer.py] => CNN: {'total': 58.68, '00-09': 46.3, '10-19': 57.3, '20-29': 79.0, '30-39': 40.8, '40-49': 66.4, '50-59': 59.6, '60-69': 73.7, '70-79': 43.6, '80-89': 61.4, 'old': 58.34, 'new': 61.4}
2023-12-17 16:15:09,536 [trainer.py] => CNN top1 curve: [85.9, 76.65, 72.43, 65.03, 63.6, 63.68, 63.14, 60.28, 58.68]
2023-12-17 16:15:09,536 [trainer.py] => CNN top5 curve: [97.2, 93.2, 91.97, 87.38, 87.84, 86.92, 86.49, 85.04, 84.41]

Average Accuracy (CNN): 67.71
2023-12-17 16:15:09,537 [trainer.py] => Average Accuracy (CNN): 67.71 

2023-12-17 16:15:09,538 [trainer.py] => All params: 171816392
2023-12-17 16:15:09,539 [trainer.py] => Trainable params: 122980
2023-12-17 16:15:09,539 [l2p_pseudolabeling.py] => Learning on 90-100
2023-12-17 16:15:09,601 [l2p_pseudolabeling.py] => start pseudo labeling...
2023-12-17 16:15:29,941 [l2p_pseudolabeling.py] => It will add 1123 pseudo labelled samples
2023-12-17 16:15:29,942 [l2p_pseudolabeling.py] => pseudo labeling finished
Task 9, Epoch 4/5 => Loss -0.185, Train_accy 95.74:  80%|████████████████████████████████████████████████████████████████████████████████████████████                       | 4/5 [00:53<00:13, 13.38s/it]
Class 0: Accuracy = 0.7100
Class 1: Accuracy = 0.8500
Class 2: Accuracy = 0.6100
Class 3: Accuracy = 0.2800
Class 4: Accuracy = 0.2300
Class 5: Accuracy = 0.4600
Class 6: Accuracy = 0.1200
Class 7: Accuracy = 0.6200
Class 8: Accuracy = 0.1800
Class 9: Accuracy = 0.4200
Class 10: Accuracy = 0.1200
Class 11: Accuracy = 0.9700
Class 12: Accuracy = 0.1700
Class 13: Accuracy = 0.6400
Class 14: Accuracy = 0.6300
Class 15: Accuracy = 0.7900
Class 16: Accuracy = 0.6600
Class 17: Accuracy = 0.6200
Class 18: Accuracy = 0.3700
Class 19: Accuracy = 0.8000
Class 20: Accuracy = 0.8400
Class 21: Accuracy = 0.9400
Class 22: Accuracy = 0.6700
Class 23: Accuracy = 0.8600
Class 24: Accuracy = 0.6900
Class 25: Accuracy = 0.8200
Class 26: Accuracy = 0.5100
Class 27: Accuracy = 0.6900
Class 28: Accuracy = 0.8700
Class 29: Accuracy = 1.0000
Class 30: Accuracy = 0.7000
Class 31: Accuracy = 0.0100
Class 32: Accuracy = 0.1100
Class 33: Accuracy = 0.9600
Class 34: Accuracy = 0.5300
Class 35: Accuracy = 0.0700
Class 36: Accuracy = 0.5500
Class 37: Accuracy = 0.1800
Class 38: Accuracy = 0.8700
Class 39: Accuracy = 0.0100
Class 40: Accuracy = 0.7600
Class 41: Accuracy = 0.5800
Class 42: Accuracy = 0.0000
Class 43: Accuracy = 0.4600
Class 44: Accuracy = 0.5600
Class 45: Accuracy = 0.9700
Class 46: Accuracy = 0.9000
Class 47: Accuracy = 0.6300
Class 48: Accuracy = 0.9100
Class 49: Accuracy = 0.7700
Class 50: Accuracy = 0.4700
Class 51: Accuracy = 0.8800
Class 52: Accuracy = 0.7200
Class 53: Accuracy = 0.7600
Class 54: Accuracy = 0.0000
Class 55: Accuracy = 0.3800
Class 56: Accuracy = 0.7200
Class 57: Accuracy = 0.5400
Class 58: Accuracy = 0.6900
Class 59: Accuracy = 0.7400
Class 60: Accuracy = 0.9400
Class 61: Accuracy = 0.7100
Class 62: Accuracy = 0.0700
Class 63: Accuracy = 0.8300
Class 64: Accuracy = 0.4800
Class 65: Accuracy = 0.8400
Class 66: Accuracy = 0.7900
Class 67: Accuracy = 0.9800
Class 68: Accuracy = 0.9400
Class 69: Accuracy = 0.9200
Class 70: Accuracy = 0.7000
Class 71: Accuracy = 0.1200
Class 72: Accuracy = 0.5200
Class 73: Accuracy = 0.5300
Class 74: Accuracy = 0.5300
Class 75: Accuracy = 0.7500
Class 76: Accuracy = 0.0000
Class 77: Accuracy = 0.5900
Class 78: Accuracy = 0.4000
Class 79: Accuracy = 0.3200
Class 80: Accuracy = 0.5000
Class 81: Accuracy = 0.8700
Class 82: Accuracy = 0.5800
Class 83: Accuracy = 0.6000
Class 84: Accuracy = 0.9500
Class 85: Accuracy = 0.3700
Class 86: Accuracy = 0.9100
Class 87: Accuracy = 0.8400
Class 88: Accuracy = 0.4800
Class 89: Accuracy = 0.0500
Class 90: Accuracy = 0.8700
Class 91: Accuracy = 0.9800
Class 92: Accuracy = 0.7400
Class 93: Accuracy = 0.6600
Class 94: Accuracy = 0.8900
Class 95: Accuracy = 0.3600
Class 96: Accuracy = 0.5700
Class 97: Accuracy = 0.7600
Class 98: Accuracy = 0.5900
Class 99: Accuracy = 0.5700
Task 9, Epoch 5/5 => Loss -0.208, Train_accy 96.25, Test_accy 59.67: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5/5 [02:15<00:00, 27.14s/it]
2023-12-17 16:17:45,682 [l2p_pseudolabeling.py] => Task 9, Epoch 5/5 => Loss -0.208, Train_accy 96.25, Test_accy 59.67
2023-12-17 16:18:53,775 [trainer.py] => No NME accuracy.
2023-12-17 16:18:53,776 [trainer.py] => CNN: {'total': 59.67, '00-09': 44.8, '10-19': 57.7, '20-29': 78.9, '30-39': 39.9, '40-49': 65.4, '50-59': 59.0, '60-69': 75.0, '70-79': 44.6, '80-89': 61.5, '90-99': 69.9, 'old': 58.53, 'new': 69.9}
2023-12-17 16:18:53,776 [trainer.py] => CNN top1 curve: [85.9, 76.65, 72.43, 65.03, 63.6, 63.68, 63.14, 60.28, 58.68, 59.67]
2023-12-17 16:18:53,776 [trainer.py] => CNN top5 curve: [97.2, 93.2, 91.97, 87.38, 87.84, 86.92, 86.49, 85.04, 84.41, 84.23]

Average Accuracy (CNN): 66.90599999999999
2023-12-17 16:18:53,776 [trainer.py] => Average Accuracy (CNN): 66.90599999999999 